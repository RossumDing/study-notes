CKB-VM
虚拟机

What is the CKB-VM?
什么是CKB-VM？

Ethereum’s virtual machine-based programmability opened the door for Turing complete development on the blockchain. Nervos takes this one step further by utilizing the RISC-V instruction set to create the CKB-VM.
以太坊基于虚拟机的可编程性为区块链上的图灵完整开发打开了大门。Nervos通过利用RISC-V指令集来创建CKB-VM，进一步迈出了这一步。

The CKB-VM is a virtual machine that executes smart contracts on Nervos. It is a full computer being emulated through software. It provides developers with the maximum amount of power and flexibility while maintaining a secure high-performance environment.
CKB-VM是在Nervos上执行智能合约的虚拟机。这是一台通过软件模拟的完整计算机。它为开发人员提供了最大限度的灵活性，同时维护了一个安全的高性能环境。

RISC-V
RISC-V is a computer instruction set similar to the one that powers your computer and the smartphone in your pocket. It is the lowest level of the software stack that provides raw instructions directly to the CPU.
RISC-V是一种计算机指令集，类似于给你的电脑和智能手机供电的指令集。它是软件堆栈的最低级别，可直接向CPU提供原始指令。

RISC-V is an award-winning open standard developed and backed by some of the largest and most recognized tech industry leaders. Support and adoption are already prevalent and several large hardware manufacturers have announced plans to implement RISC-V in their mainstream consumer products.
RISC-V是一个屡获殊荣的开放标准，由一些最大和最受认可的技术行业领导者开发和支持。支持和采用已经很普遍，一些大型硬件制造商已经宣布计划在其主流消费产品中实施RISC-V。

The standard is mature, established, and built for modern hardware development. This guarantees a simple, modular design that will always be backward-compatible. It is an ideal fit for blockchain development.
该标准是为现代硬件开发而制定的成熟标准。这保证了一个简单的、模块化的设计，将始终向后兼容。它非常适合区块链开发。

Flexibility
灵活性

With CKB-VM, operations that have traditionally been problematic in blockchains, like rolling out new cryptographic primitives such as Schnorr, BLS, zk-SNARKs, and zk-STARKs, no longer require a hard fork. The process is as simple as adding a new library to your codebase.
使用CKB-VM，传统上在区块链中存在问题的操作（例如推出新的加密原语，例如Schnorr，BLS，zk-SNARK和zk-STARK）不再需要硬分叉。该过程就像将新库添加到您的代码库一样简单。

Developers have complete flexibility to rely on existing open-source libraries rather than being forced to retool everything from scratch. This allows for a less restrictive developer experience and quicker adoption of next-generation technological advancements, such as cross-blockchain interaction, scaling innovations, and direct integration with secure hardware enclaves.
开发人员完全可以灵活地依赖现有的开放源码库，而不必被迫从头开始重新构建一切。这样可以减少对开发人员的限制，并更快地采用下一代技术进步，例如跨区块链交互，扩展创新以及与安全硬件隔离区的直接集成。。

Any programming language that can target RISC-V can be used natively for Nervos development. Use your existing tooling, favorite IDEs, and debug tools. There is no need to rely on immature and untested tools; use whatever is best for the job.
任何可以针对RISC-V的编程语言都可以在Nervos开发中使用。使用现有的工具、常用的IDE和调试工具。无需依赖不成熟且未经测试的工具；使用最适合工作的东西。

Nervos CKB offers native SDKs in a growing number of well-known general-purpose programming languages, such as JavaScript, Rust, and C. Direct support for emerging smart contract languages, such as Solidity, Vyper, and Plutus is also planned.
Nervos CKB以越来越多的知名通用编程语言（例如JavaScript、Rust和C）提供本地SDK。还计划直接支持新兴的智能合约语言，例如Solidity、Vyper和Plutus。

Further Reading
进一步阅读

For more technical information on CKB-VM, please see the CKB-VM RFC.
有关CKB-VM的更多技术信息，请参阅CKB-VM RFC。
（https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0003-ckb-vm/0003-ckb-vm.md）
